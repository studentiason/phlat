#!/bin/sh
set -e
#clean first
if [ -f /usr/share/themes/phlat/files ];then
	for _file in $(cat /usr/share/themes/phlat/files) ; do
		if [ -L $_file ]; then
			rm -fv "$_file"
		fi
		if [ -f $_file ]; then
			rm -fv "$_file"
		fi
	done
#dirs!
	rm -f /usr/share/themes/phlat/files
#re-enable the overlay scrollbars
	sed -i '/^#phlat$/,+1 d' /etc/environment
fi
#start here
_tmpdir="/tmp/phlat.tmp"
if [ -d ${_tmpdir} ]; then
	rm -r ${_tmpdir}
fi
#dirs!
mkdir -p ${_tmpdir}/usr/share/themes
#downloading and extracting
cd /tmp
curl -L https://codeload.github.com/sixsixfive/phlat/zip/master > /tmp/phlat.zip
if [ -f ${_tmpdir}/../phlat.zip ]; then
	unzip ${_tmpdir}/../phlat.zip -d ${_tmpdir}/usr/share/themes
	mv ${_tmpdir}/usr/share/themes/phlat-master ${_tmpdir}/usr/share/themes/phlat
fi
###link all themes
if [ -d ${_tmpdir}/usr/share/themes/phlat ]; then
#icewm theme
	mkdir -p ${_tmpdir}/usr/share/icewm/themes
	ln -sf ../../themes/phlat/@extra/icewm/phlat ${_tmpdir}/usr/share/icewm/themes/phlat
#plank theme
	#mkdir -p ${_tmpdir}/usr/share/plank/themes
	#ln -sf ../../themes/phlat/@extra/plank/phlat ${_tmpdir}/usr/share/plank/themes/phlat
	mkdir -p ${_tmpdir}/usr/share/plank/themes
	for _f in $(find ${_tmpdir}/usr/share/themes/phlat/@extra/plank/ -mindepth 1 -type d|sed 's\^.*/\\g'); do
		ln -sf ../../themes/phlat/@extra/plank/$_f ${_tmpdir}/usr/share/plank/themes/$_f
	done
#onboard
	#mkdir -p ${_tmpdir}/usr/share/onboard/themes
	#ln -sf ../../themes/phlat/@extra/onboard/phlat.colors ${_tmpdir}/usr/share/onboard/themes
	#ln -sf ../../themes/phlat/@extra/onboard/phlat.theme ${_tmpdir}/usr/share/onboard/themes
	mkdir -p ${_tmpdir}/usr/share/onboard/themes
	for _f in $(find ${_tmpdir}/usr/share/themes/phlat/@extra/onboard -type f|sed 's\^.*/\\g'); do
		ln -sf ../../themes/phlat/@extra/onboard/$_f ${_tmpdir}/usr/share/onboard/themes/$_f
	done
#qt5ct
	mkdir -p ${_tmpdir}/usr/share/qt5ct/colors ${_tmpdir}/usr/share/qt5ct/qss
	ln -sf ../../themes/phlat/@extra/qt5ct/colors/phlat_QGtkStyle.conf ${_tmpdir}/usr/share/qt5ct/colors
	ln -sf ../../themes/phlat/@extra/qt5ct/qss/phlat_QGtkStyle.qss ${_tmpdir}/usr/share/qt5ct/qss
#HiDPI theme
	ln -sf phlat/@extra/phlat-hidpi ${_tmpdir}/usr/share/themes/phlat-HiDPI
#icon theme
	mkdir -p ${_tmpdir}/usr/share/icons
	ln -sf ../themes/phlat/@extra/phlat-icons ${_tmpdir}/usr/share/icons/phlat
#wallpapers
	mkdir -p ${_tmpdir}/usr/share/backgrounds/phlat_patterns
	mkdir -p ${_tmpdir}/usr/share/backgrounds/xfce
	mkdir -p ${_tmpdir}/usr/share/mate-background-properties
	mkdir -p ${_tmpdir}/usr/share/gnome-background-properties
	for _f in $(find ${_tmpdir}/usr/share/themes/phlat/@extra/backgrounds/patterns -type f|sed 's\^.*/\\g'); do
		ln -s ../../themes/phlat/@extra/backgrounds/patterns/$_f ${_tmpdir}/usr/share/backgrounds/phlat_patterns/$_f
	done
	for _f in $(find ${_tmpdir}/usr/share/themes/phlat/@extra/backgrounds/patterns -type f|sed 's\^.*/\\g'); do
		ln -s ../../themes/phlat/@extra/backgrounds/patterns/$_f ${_tmpdir}/usr/share/backgrounds/xfce/$_f
	done
	cat <<\EOF > ${_tmpdir}/usr/share/mate-background-properties/phlat_patterns.xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE wallpapers SYSTEM "mate-wp-list.dtd">
<wallpapers>

EOF
	for _f in $(find ${_tmpdir}/usr/share/themes/phlat/@extra/backgrounds/patterns -type f|sed 's\^.*/\\g'); do
		cat << EOF2 >> ${_tmpdir}/usr/share/mate-background-properties/phlat_patterns.xml
	<wallpaper deleted="false">
		<name>$_f</name>
		<filename>/usr/share/backgrounds/phlat_patterns/$_f</filename>
		<shade_type>vertical-gradient</shade_type>
		<pcolor>#343434</pcolor>
		<scolor>#444444</scolor>
		<options>wallpaper</options>
		<artist>sixsixfive</artist>
	</wallpaper>
EOF2
done
	cat <<\EOF3 >> ${_tmpdir}/usr/share/mate-background-properties/phlat_patterns.xml
	
</wallpapers>
EOF3
ln -s ../mate-background-properties/phlat_patterns.xml ${_tmpdir}/usr/share/gnome-background-properties/phlat_patterns.xml
#configstuff
#	mkdir -p ${_tmpdir}/usr/share/applications
#	ln -sf ../themes/phlat/@extra/scripts/phlat.desktop ${_tmpdir}/usr/share/applications
#no overlay scrollbars
#	mkdir -p ${_tmpdir}/etc/X11/Xsession.d
#	printf "export GTK_OVERLAY_SCROLLING=0\nexport LIBOVERLAY_SCROLLBAR=0\n" > ${_tmpdir}/etc/X11/Xsession.d/98_phlat
#xsession.d was a good idea however it wont work with root apps like synaptic so use /etc/environment instead
	printf '\n#phlat\nGTK_OVERLAY_SCROLLING=0\n#phlat\nLIBOVERLAY_SCROLLBAR=0\n'>> /etc/environment
#######Debian-only!
#chromium scrollbars
	mkdir -p ${_tmpdir}/etc/chromium.d
	cat <<\EOF > ${_tmpdir}/etc/chromium.d/phlat
export CHROMIUM_FLAGS="$CHROMIUM_FLAGS --load-extension=/usr/share/themes/phlat/@extra/Chromium_unpackedextension"
EOF
#create a file list!
	find ${_tmpdir} > ${_tmpdir}/usr/share/themes/phlat/files
	sed -i 's|^/tmp/phlat.tmp||g' ${_tmpdir}/usr/share/themes/phlat/files
#install to / - dpkg will fix permissions on build...
	chmod -R 755 ${_tmpdir}
	cp -R ${_tmpdir}/* /
#use the distros color
	if dpkg --get-selections|grep trios-keyring ;then
		_selection_color="#CF4242"
	elif dpkg --get-selections|grep siduction-archive-keyring ;then
		_selection_color="#FF6600"
	elif dpkg --get-selections|grep devuan-keyring ;then
		_selection_color="#6F6A83"
	elif dpkg --get-selections|grep linuxmint-keyring ;then
		_selection_color="#9AB87C"
	elif dpkg --get-selections|grep ubuntu-keyring ;then
		_selection_color="#E95420"
	elif dpkg --get-selections|grep kfreebsd ;then
		_selection_color="#870000"
	else
	#fallback to the cool debian red
		_selection_color="#D70A53"
	fi
	sh /usr/share/themes/phlat/@extra/scripts/changecolor.sh -c "${_selection_color}"
fi
